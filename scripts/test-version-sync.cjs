#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –≤–µ—Ä—Å–∏–∏
 */
function testVersionSync() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤–µ—Ä—Å–∏–∏...\n');

  try {
    // –ß–∏—Ç–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ Cargo.toml
    const cargoTomlPath = path.join(__dirname, '..', 'src-tauri', 'Cargo.toml');
    const cargoTomlContent = fs.readFileSync(cargoTomlPath, 'utf8');
    const cargoVersionMatch = cargoTomlContent.match(/version\s*=\s*"([^"]+)"/);

    if (!cargoVersionMatch) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–µ—Ä—Å–∏—é –≤ Cargo.toml');
      return false;
    }

    const cargoVersion = cargoVersionMatch[1];
    console.log(`üì¶ –í–µ—Ä—Å–∏—è –≤ Cargo.toml: ${cargoVersion}`);

    // –ß–∏—Ç–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ package.json
    const packageJsonPath = path.join(__dirname, '..', 'package.json');
    const packageJsonContent = fs.readFileSync(packageJsonPath, 'utf8');
    const packageJson = JSON.parse(packageJsonContent);

    console.log(`üì¶ –í–µ—Ä—Å–∏—è –≤ package.json: ${packageJson.version}`);

    // –ß–∏—Ç–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ tauri.conf.json
    const tauriConfPath = path.join(__dirname, '..', 'src-tauri', 'tauri.conf.json');
    const tauriConfContent = fs.readFileSync(tauriConfPath, 'utf8');
    const tauriConf = JSON.parse(tauriConfContent);

    console.log(`üì¶ –í–µ—Ä—Å–∏—è –≤ tauri.conf.json: ${tauriConf.version}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
    const packageJsonMatch = cargoVersion === packageJson.version;
    const tauriConfMatch = cargoVersion === tauriConf.version;

    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log(
      `‚úÖ –í–µ—Ä—Å–∏–∏ Cargo.toml –∏ package.json —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã: ${packageJsonMatch ? '–î–ê' : '–ù–ï–¢'}`,
    );
    console.log(
      `‚úÖ –í–µ—Ä—Å–∏–∏ Cargo.toml –∏ tauri.conf.json —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã: ${tauriConfMatch ? '–î–ê' : '–ù–ï–¢'}`,
    );

    if (packageJsonMatch && tauriConfMatch) {
      console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –í–µ—Ä—Å–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç—Å—è.');
      return true;
    } else {
      console.log('\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã.');
      return false;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
const success = testVersionSync();
process.exit(success ? 0 : 1);
